name: ShadowScope CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shadowscope
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@127.0.0.1:5432/shadowscope
      TEST_DATABASE_URL: postgresql+psycopg://postgres:postgres@127.0.0.1:5432/shadowscope
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -e .

      - name: Prepare environment file
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          fi

      - name: Database init
        run: ss db init

      - name: Run tests
        run: ss test

      - name: Seed sample event
        run: |
          python - <<'PY'
from datetime import datetime
from sqlalchemy.exc import IntegrityError

from backend.db.models import Entity, Event, get_session_factory

SessionFactory = get_session_factory()

with SessionFactory() as session:
    entity = session.query(Entity).first()
    if not entity:
        entity = Entity(name="CI Smoke Entity")
        session.add(entity)
        session.flush()

    event = Event(
        entity_id=entity.id,
        category="ci",
        occurred_at=datetime.utcnow(),
        source="ci",
        snippet="CI smoke test event",
        hash="ci-smoke-event",
    )
    session.add(event)
    try:
        session.commit()
    except IntegrityError:
        session.rollback()

with SessionFactory() as session:
    total = session.query(Event).count()
    if total == 0:
        raise SystemExit("Expected at least one event in the database")
PY

      - name: Smoke test API
        run: |
          set -euo pipefail
          ss serve --host 127.0.0.1 --port 8001 &
          SERVER_PID=$!
          trap "kill $SERVER_PID" EXIT
          for attempt in {1..30}; do
            if curl -sSf http://127.0.0.1:8001/health >/dev/null 2>&1; then
              break
            fi
            sleep 1
          done
          RESPONSE=$(curl -sSf http://127.0.0.1:8001/api/events?limit=1)
          python - <<'PY' "$RESPONSE"
import json
import sys

data = json.loads(sys.argv[1])
if not data.get("items"):
    raise SystemExit("/api/events returned no items")
PY
